@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        var userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
        var user = await UserManager.FindByIdAsync(userId);
        var roles = await UserManager.GetRolesAsync(user);
        bool isAdmin = roles.Contains("Admin");

        <li class="nav-item">
            <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
        </li>

        @* Show admin links if the user is an admin *@
        @if (isAdmin)
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-controller="Hotel" asp-action="Index">Manage Hotels</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-dark" asp-controller="Country" asp-action="Index">Manage Countries</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-dark" asp-controller="City" asp-action="Index">Manage Cities</a>
            </li>
        }

        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
